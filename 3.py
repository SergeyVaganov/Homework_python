# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится
# на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе
# пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и
# отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
import re


class My_exeption(Exception):

    @staticmethod
    def is_num(str):
        if (not re.fullmatch(r'\d*\.?\d*', str)) or (str == ''):
            raise My_exeption('не число')

    def __init__(self, txt):
        self.txt = txt


str = ''
list = []
while(str != 'stop'):
    try:
        str = input('Введите элемент массива - ')
        My_exeption.is_num(str)
    except My_exeption as ex:
        print(ex.txt)
        continue
    list.append(float(str))
print('полученный массив - ', list)
